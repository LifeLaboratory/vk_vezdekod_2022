<?php

namespace app\models;

use Yii;
use yii\helpers\Html;

/**
 * This is the model class for table "task".
 *
 * @property int $id
 * @property int $user_id
 * @property string $title Название задачи
 * @property int $start_date Дата начала выполнения задачи
 * @property int $due_date Дата завершения задачи
 * @property string $description Описание задачи
 */
class Task extends \yii\db\ActiveRecord
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'task';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['user_id', 'title', 'start_date', 'due_date', 'description'], 'required'],
            [['user_id'], 'integer'],
            [['start_date', 'due_date', 'status'], 'string'],
            [['title'], 'string', 'max' => 50],
            [['description'], 'string', 'max' => 1000],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'user_id' => 'User ID',
            'title' => 'Название задачи',
            'start_date' => 'Дата начала выполнения задачи',
            'due_date' => 'Дата завершения задачи',
            'description' => 'Описание задачи',
        ];
    }

    /**
     * {@inheritdoc}
     * @return TaskQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new TaskQuery(get_called_class());
    }


    public function beforeValidate()
    {
        $this->user_id = Yii::$app->user->identity->id;
        return parent::beforeValidate(); // TODO: Change the autogenerated stub
    }

    public function beforeSave($insert)
    {

        $this->start_date = strtotime($this->start_date);
        $this->due_date = strtotime($this->due_date);


        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }


    public function getEstimate ()
    {
       return floor(($this->due_date - $this->start_date) / 86400);
    }

    public function getActions ()
    {
        return
            Html::a('Редактировать', '/main/default/update?id='.$this->id,
                ['class' => 'btn btn-primary btn-main', 'style' => 'width: 100%; margin-bottom: 10px'] ).
            '<br>'.
            Html::a('Удалить', '/main/default/delete?id='.$this->id,['class' => 'btn btn-danger', 'style' => 'width: 100%']);

    }

    public function changeStatus()
    {
        return Html::a('Изменить', '/main/default/change-status?id='.$this->id);
    }

}
